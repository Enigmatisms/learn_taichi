<?xml version='1.0' encoding='utf-8'?>
<!-- A test file for mitsuba-like scene xml file parser -->
<!-- Author: Qianyue He / Original credit goes to Wenzel Jakob -->
<!-- Only Steady state rendering are supported -->
<!-- Only RGB or sRGB spectrums are supported -->
<scene version="1.0">
	<sensor type="perspective">
		<float name="near_clip" value="0.001"/>
		<float name="far_clip" value="2000"/>
		<float name="fov" value="39.3077"/>
        <integer name="sample_count" value="512"/>

		<transform name="toWorld">
			<lookat target="2.78, 2.73, -7.99" origin="2.78, 2.73, -8.00" up="0, 1, 0"/>
		</transform>

		<film type="film">
			<integer name="width" value="512"/>
			<integer name="height" value="512"/>
			<integer name="subSamples" value="8"/>
		</film>
	</sensor>

	<bsdf type="diffuse" id="box">
		<srgb name="reflectance" value="#BCBCBC"/>
	</bsdf>

	<bsdf type="diffuse" id="white">
		<srgb name="reflectance" value="#BDBDBD"/>
	</bsdf>

	<bsdf type="diffuse" id="red">
		<srgb name="reflectance" value="#DD2525"/>
	</bsdf>

	<bsdf type="diffuse" id="green">
		<srgb name="reflectance" value="#25DD25"/>
	</bsdf>

	<bsdf type="diffuse" id="light">
		<srgb name="reflectance" value="#FFFFFF"/>
	</bsdf>

	<shape type="obj">
		<string name="filename" value="meshes/cbox_luminaire.obj"/>
		<!-- Rigid-body transformation defined in world frame -->
		<!-- Angle are of unit 'degree', not 'rads' -->
		<transform name="toWorld">
			<translate x="0" y="-0.002" z="0"/>
			<!-- Three types of rotation are supported -->
			<!-- <rotate type="quaternion" x="0" y="0" z="0" w="0"/> -->

			<!-- For simple rotation, angle-axis / euler are recommended -->
			<!-- <rotate type="angle-axis" x="0" y="0" z="0" angle="0"/> -->

			<!--Roll Pitch Yaw Description, note that mitsuba coordinates ar
				x - lateral translation, y: height, z: depth, therefore 
				roll spins around z, pitch spins around x, yaw spins around y
			-->
			<!-- <rotate type="euler" r="0" p="0" y="0"/> -->
		</transform>
		<!-- <emitter type="area">
			<srgb name="reflectance" value="#FFFFFF"/>
		</emitter> -->
	</shape>

	<emitter type="point">
		<rgb name="reflectance" value="#FDFAFB"/>
		<point name="position" x="2.79" y="2.73" z="-8.01"/>
	</emitter>

	<shape type="obj">
		<string name="filename" value="meshes/cbox_floor.obj"/>

		<ref id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/cbox_ceiling.obj"/>

		<ref id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/cbox_back.obj"/>
		<ref id="white"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/cbox_greenwall.obj"/>

		<ref id="green"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/cbox_redwall.obj"/>

		<ref id="red"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/cbox_smallbox.obj"/>

		<ref id="box"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/cbox_largebox.obj"/>

		<ref id="box"/>
	</shape>
</scene>